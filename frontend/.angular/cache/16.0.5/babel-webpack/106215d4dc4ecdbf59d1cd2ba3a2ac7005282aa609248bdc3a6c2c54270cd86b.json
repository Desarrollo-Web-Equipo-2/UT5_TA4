{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(email, password) {\n    const httpHeader = new HttpHeaders();\n    httpHeader.set();\n    return this.http.post('localhost:3000/api/login', {\n      email,\n      password\n    });\n    // this is just the HTTP call,\n    // we still need to handle the reception of the token\n    // .shareReplay();\n  }\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","AuthService","constructor","http","login","email","password","httpHeader","set","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Leandro\\Documents\\Facultad\\Desarrollo web y mobile\\UT5-TA4\\frontend\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  login(email:string, password:string ) {\n    const httpHeader = new HttpHeaders();\n    httpHeader.set()\n    return this.http.post<any>('localhost:3000/api/login', {email, password});\n      // this is just the HTTP call,\n      // we still need to handle the reception of the token\n      // .shareReplay();\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEAC,KAAKA,CAACC,KAAY,EAAEC,QAAe;IACjC,MAAMC,UAAU,GAAG,IAAIP,WAAW,EAAE;IACpCO,UAAU,CAACC,GAAG,EAAE;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,0BAA0B,EAAE;MAACJ,KAAK;MAAEC;IAAQ,CAAC,CAAC;IACvE;IACA;IACA;EACJ;;;AAZWL,WAAW,C;mBAAXA,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXZ,WAAW,C;SAAXA,WAAW;EAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPf,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}