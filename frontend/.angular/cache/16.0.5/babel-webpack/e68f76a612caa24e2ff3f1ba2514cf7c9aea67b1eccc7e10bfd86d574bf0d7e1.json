{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(email, password) {\n    return this.http.post('http://localhost:3000/api/login', {\n      email,\n      password\n    }).subscribe(response => {\n      // const jwtCookie = this.getCookieFromResponse(response, 'jwt'); // Assuming 'jwt' is the name of the cookie\n      // console.log(jwtCookie);\n      // You can now use the JWT cookie value for further processing\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","login","email","password","post","subscribe","response","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Leandro\\Documents\\Facultad\\Desarrollo web y mobile\\UT5-TA4\\frontend\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  login(email:string, password:string ) {\n    return this.http.post('http://localhost:3000/api/login', {email, password}).subscribe(\n        (response: HttpResponse<any>) => {\n            // const jwtCookie = this.getCookieFromResponse(response, 'jwt'); // Assuming 'jwt' is the name of the cookie\n            // console.log(jwtCookie);\n            // You can now use the JWT cookie value for further processing\n        },\n        error => {\n            console.error(error);\n        }\n    );\n  }\n}\n"],"mappings":";;AAGA,MAGaA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEAC,KAAKA,CAACC,KAAY,EAAEC,QAAe;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,iCAAiC,EAAE;MAACF,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAACE,SAAS,CAChFC,QAA2B,IAAI;MAC5B;MACA;MACA;IAAA,CACH,EACDC,KAAK,IAAG;MACJC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CACJ;EACH;;AAhBWT,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}